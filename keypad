#include <LiquidCrystal_I2C.h>
#include <Keypad.h>
#include <TM1637Display.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Wire.h>
#include <Servo.h>

////////////////////////////////////////////////////////////////////
#define CLK 52
#define DIO 53

TM1637Display tm(CLK, DIO);
//uint8_t data[] = { 0xff, 0xff, 0xff, 0xff };
uint8_t blank[] = { 0x00, 0x00, 0x00, 0x00 };
String password = "1234";
String inpws;
int a = 0,b = 0,c = 0,d = 0;
int total;
int cout = 0;
int cin = 0;
int din = 0;
int dout = 0;
////////////////////////////////////////////////////////////////////

LiquidCrystal_I2C lcd(0x27,20,4);

/////////////////////////////////////////////////////////////////////
const byte ROWS = 4; //four rows
const byte COLS = 4; //three columns
char keys[ROWS][COLS] = {
  {'1','2','3', 'A'},
  {'4','5','6', 'B'},
  {'7','8','9', 'C'},
  {'*','0','#', 'D'}
};
byte rowPins[ROWS] = {24,26,28,30}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {25,27,29,31}; //connect to the column pinouts of the keypad

Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );
//////////////////////////////////////////////////////////////////////

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
Adafruit_SSD1306 oled(SCREEN_WIDTH, SCREEN_HEIGHT);
const unsigned char house [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x83, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1e, 0x78, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3c, 0x3c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x78, 0x1e, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xf0, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xe0, 0x07, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xc0, 0x03, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x87, 0x80, 0x01, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1e, 0x00, 0x00, 0x78, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3c, 0x00, 0x00, 0x3c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x78, 0x00, 0x00, 0x1e, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xe0, 0x00, 0x00, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xc0, 0x00, 0x00, 0x07, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0x80, 0x00, 0x00, 0x03, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x87, 0x00, 0x00, 0x00, 0x01, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x70, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x78, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

//////////////////////////////////////////////////////////////////////

Servo myservo; // membuat variabel servo untuk dikendalikan
int pos = 0; // deklarasi variabel untuk posisi sudut

//////////////////////////////////////////////////////////////////////
int kondisi = 0;
int poten = A0;

void setup() 
{
  // put your setup code here, to run once:
lcd.init();
lcd.backlight();

tm.showNumberDec(0, true);
tm.setBrightness(4);

oled.begin(SSD1306_SWITCHCAPVCC, 0x3C);
oled.clearDisplay(); //clear sebelum tampilan baru

myservo.attach(2);
}

void loop() {
  // put your main code here, to run repeatedly:


  while(kondisi == 0)
  {
  char key = keypad.getKey();
  tm.showNumberDec(0, true);
  oled.drawBitmap(0, 0, house,128,64, WHITE); 
  oled.display(); //tampilkan data

  lcd.setCursor(0,0);
  lcd.print("Pilihan :");
  lcd.setCursor(0,1);
  lcd.print("1. Potensio");
  lcd.setCursor(0,2);
  lcd.print("2. Login");
  lcd.setCursor(0,3);
  lcd.print("3. Konzz");
  if (key)
  {
   if(key == '1')
   {
    kondisi = 1;
    lcd.clear();
    oled.clearDisplay();
    oled.display();
   }
   else if(key == '2')
    {
    kondisi = 2;
    lcd.clear();
    oled.clearDisplay();
    oled.display();
   }
    else if(key == '3')
   {
    kondisi = 3;
    lcd.clear();
    oled.clearDisplay();
    oled.display();
    }
    else{}
  }
  }

  while (kondisi == 1)
  {
    char key = keypad.getKey();

  int nilai= analogRead(poten);
  int output= map(nilai, 0, 1023, 0, 100);
  lcd.setCursor(0,0);
  lcd.print("sensor: ");
  lcd.print(nilai);
  lcd.setCursor(0,1);
  lcd.print("output: ");
  lcd.print(output);
  delay (500);

    if (key)
    {
      if(key == '*')
      {
         kondisi = 0;
         lcd.clear();
      }
    }

  }

  while (kondisi == 2)
  {
    int z = 0;
    char key = keypad.getKey();
    lcd.setCursor (0,0);
    lcd.print("PASSWORD :");
    if (key)
    {
      if (key != 'A' && key != 'B' && key != 'C' && key != 'D' && key != '*' && key != '#')
      {
        if (key == '0')
        {
          a = b;
          b = c;
          c = d;
          d = 0;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        else if (key == '1')
        {
          a = b;
          b = c;
          c = d;
          d = 1;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        else if (key == '2')
        {
          a = b;
          b = c;
          c = d;
          d = 2;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        else if (key == '3')
        {
          a = b;
          b = c;
          c = d;
          d = 3;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        else if (key == '4')
        {
          a = b;
          b = c;
          c = d;
          d = 4;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        else if (key == '5')
        {
          a = b;
          b = c;
          c = d;
          d = 5;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        else if (key == '6')
        {
          a = b;
          b = c;
          c = d;
          d = 6;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        else if (key == '7')
        {
          a = b;
          b = c;
          c = d;
          d = 7;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        else if (key == '8')
        {
          a = b;
          b = c;
          c = d;
          d = 8;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        else if (key == '9')
        {
          a = b;
          b = c;
          c = d;
          d = 9;
          total = (a*1000) + (b*100) + (c*10) + d;
          z++;
        }
        inpws += key;
        if (z>4)
        {
          inpws ="";
          z=0;
        }
      }
      else if (key == 'D')
      {
        kondisi = 4;
        a = b = c = d = 0;
      }
      else if (key == 'C')
      {
        
        a = b = c = d = total = 0;
        inpws = "";
      }
      else if (key == '*')
      {
        kondisi = 0;
        lcd.clear();
      }
    }
    tm.showNumberDec(total, true);
  }

  while(kondisi == 4)
  {
    char key = keypad.getKey();
    
    if (inpws == password)
    {
      lcd.setCursor(0,0);
      lcd.print("COUNTER UP");
      if (key)
    {
      if (key != 'A' && key != 'B' && key != 'C' && key != 'D' && key != '*' && key != '#')
      {
        if (key == '0')
        {
          a = b;
          b = 0;
          cout = (a*10) + b;
        }
        else if (key == '1')
        {
          a = b;
          b = 1;
          cout = (a*10) + b;
        }
        else if (key == '2')
        {
          a = b;
          b = 2;
          cout = (a*10) + b;
        }
        else if (key == '3')
        {
          a = b;
          b = 3;
          cout = (a*10) + b;
        }
        else if (key == '4')
        {
          a = b;
          b = 4;
          cout = (a*10) + b;
        }
        else if (key == '5')
        {
          a = b;
          b = 5;
          cout = (a*10) + b;
        }
        else if (key == '6')
        {
          a = b;
          b = 6;
          cout = (a*10) + b;
        }
        else if (key == '7')
        {
          a = b;
          b = 7;
          cout = (a*10) + b;
        }
        else if (key == '8')
        {
          a = b;
          b = 8;
          cout = (a*10) + b;
        }
        else if (key == '9')
        {
          a = b;
          b = 9;
          cout = (a*10) + b;
        }
      }
      else if (key == 'D')
      {
        kondisi = 5;
        lcd.clear();
        a = b = 0;
      }
      else if (key == 'C')
      {
        
        a = b = cout = 0;
      }
      tm.showNumberDec(cout, true);
    }
    }
    else 
    {
      lcd.setCursor(0,0);
      lcd.print("TRY AGAIN");
      delay (1000);
      a = b = c = d = cin = 0;
      tm.showNumberDec(cout, true);
      inpws = "";
      kondisi = 0;
      lcd.clear();
    }
  }

  while (kondisi == 5)
  {
    lcd.setCursor(0,0);
    lcd.print("COUNTING UP");
    char key = keypad.getKey();
    for (cin = 0; cin <=cout; cin++)
    {
      pos = cin;
      myservo.write(pos);
      tm.showNumberDec(cin, 0);
	    delay(500);
    }
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.print("RETURNING TO MENU");    
    delay (1000);
    tm.showNumberDec(0, true);
    kondisi = 0;
    lcd.clear();
  }

  while (kondisi == 3)
  {
        char key = keypad.getKey();
    
      lcd.setCursor(0,0);
      lcd.print("COUNTER DOWN");

      if (key)
    {
      if (key != 'A' && key != 'B' && key != 'C' && key != 'D' && key != '*' && key != '#')
      {
        if (key == '0')
        {
          a = b;
          b = 0;
          dout = (a*10) + b;
        }
        else if (key == '1')
        {
          a = b;
          b = 1;
          dout = (a*10) + b;
        }
        else if (key == '2')
        {
          a = b;
          b = 2;
          dout = (a*10) + b;
        }
        else if (key == '3')
        {
          a = b;
          b = 3;
          dout = (a*10) + b;
        }
        else if (key == '4')
        {
          a = b;
          b = 4;
          dout = (a*10) + b;
        }
        else if (key == '5')
        {
          a = b;
          b = 5;
          dout = (a*10) + b;
        }
        else if (key == '6')
        {
          a = b;
          b = 6;
          dout = (a*10) + b;
        }
        else if (key == '7')
        {
          a = b;
          b = 7;
          dout = (a*10) + b;
        }
        else if (key == '8')
        {
          a = b;
          b = 8;
          dout = (a*10) + b;
        }
        else if (key == '9')
        {
          a = b;
          b = 9;
          dout = (a*10) + b;
        }
      }
      else if (key == 'D')
      {
        kondisi = 6;
        lcd.clear();
        a = b = 0;
      }
      else if (key == 'C')
      {
        a = b = cout = 0;
      }
      tm.showNumberDec(dout, true);
    }
  }

  while (kondisi == 6)
  {
    lcd.setCursor(0,0);
    lcd.print("COUNTING DOWN");
    char key = keypad.getKey();
    for (din = dout; din >= 0; din--)
    {
      //pos = cin;
      //myservo.write(pos);
      tm.showNumberDec(din, 0);
	    delay(500);
    }
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.print("RETURNING TO MENU");    
    delay (1000);
    tm.showNumberDec(0, true);
    kondisi = 0;
    lcd.clear();
  }
}
